{
  // files
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.associations": {
    "**/.github/workflows/*.y*ml": "yaml",
    "CODEOWNERS": "ignore"
  },
  // editor
  "editor.inlineSuggest.enabled": true,
  "editor.detectIndentation": true,
  "editor.formatOnSave": true,
  // git
  "git.autorefresh": true,
  "git.autofetch": true,
  "git.fetchOnPull": true,
  "git.pruneOnFetch": true,
  "git.pullBeforeCheckout": true,
  "git.branchProtection": [
    "main"
  ],
  "git.mergeEditor": true,
  "git.enableSmartCommit": true,
  // github
  "github.branchProtection": true,
  "githubPullRequests.showPullRequestNumberInTree": true,
  // yaml
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "yaml.format.singleQuote": false,
  "yaml.schemaStore.enable": true,
  // markdown
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  "markdownlint.config": {
    "extends": "./.markdownlint.yml"
  },
  // go
  "go.useLanguageServer": true,
  "go.toolsManagement.autoUpdate": true,
  "go.vetOnSave": "package",
  "[go]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "golang.go",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "always"
    }
  },
  "[go.mod]": {
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "always"
    }
  },
  "gopls": {
    "formatting.gofumpt": true,
    "ui.semanticTokens": true,
    "ui.completion.usePlaceholders": true
  },
  "go.formatTool": "goimports",
  "go.diagnostic.vulncheck": "Imports",
  "go.testTimeout": "3m",
  "linter.linters": {
    "yamllint": {
      "configFiles": [
        ".yamllint.yml"
      ]
    },
    "markdownlint": {
      "configFiles": [
        ".markdownlint.yml"
      ]
    },
    "shellcheck": {
      "configFiles": [
        ".shellcheckrc"
      ],
      "command": [
        "shellcheck",
        "--format",
        "json",
        "--enable",
        "all",
        "--rcfile",
        "$config",
        "-"
      ]
    }
  },
  "shellcheck.customArgs": [
    "--rcfile",
    ".shellcheckrc"
  ],
  "shellcheck.useWorkspaceRootAsCwd": true,
  "sarif-viewer.connectToGithubCodeScanning": "on",
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  "[terraform-test]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  "[hcl]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  // copilot
  "chat.mcp.discovery.enabled": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Use the Conventional Commits specification to create commit message with scope to keep consistent commit history. Do not use file extension. Must be less than 100 characters."
    }
  ]
}
